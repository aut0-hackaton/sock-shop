// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WebShop.E2E.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("MainUseCases", SourceFile="MainUseCases.feature", SourceLine=0)]
    public partial class MainUseCasesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MainUseCases.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MainUseCases", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
 testRunner.Given("logged in as user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
  testRunner.And("it is catalog page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
  testRunner.And("product \"Holy\" is added to cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Can add product to cart", SourceLine=9)]
        public virtual void CanAddProductToCart()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Can add product to cart", null, ((string[])(null)));
#line 10
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 11
 testRunner.Then("there is new item in cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add 2 distinct items, pay, view order", SourceLine=12)]
        public virtual void Add2DistinctItemsPayViewOrder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add 2 distinct items, pay, view order", null, ((string[])(null)));
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 15
 testRunner.When("I press button \"Continue shopping\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
    testRunner.And("I choose socks \"Crossed\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line 17
    testRunner.And("I press button \"Add to cart\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line 18
    testRunner.And("I press button \"in cart\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line 19
 testRunner.Then("total price is 40.31", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
 testRunner.When("I press button \"Proceed to checkout\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.Then("I am redirected to \"customer-orders\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
    testRunner.And("I see my latest order with a price of 40.31", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line 23
 testRunner.Then("I remember latest order number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 24
 testRunner.When("I press button \"View\" on my latest order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("I am redirected to \"customer-order.html?order=/orders/<OrderNumber>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
    testRunner.And("I see total price of 40.31", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add 2 same items, delete, check pay button", SourceLine=28)]
        public virtual void Add2SameItemsDeleteCheckPayButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add 2 same items, delete, check pay button", null, ((string[])(null)));
#line 29
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 30
 testRunner.When("I choose socks \"Colourful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
    testRunner.And("I press button \"Add to cart\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line 32
    testRunner.And("I press button \"in cart\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Total",
                        "36"});
            table1.AddRow(new string[] {
                        "UnitPrice",
                        "18"});
            table1.AddRow(new string[] {
                        "Quantity",
                        "2"});
#line 33
 testRunner.Then("CartProduct has the following fields:", ((string)(null)), table1, "Then ");
#line 38
 testRunner.When("I delete from cart socks \"Colourful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
 testRunner.Then("button \"Proceed to checkout\" is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Change shipping details", SourceLine=42)]
        public virtual void ChangeShippingDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change shipping details", null, ((string[])(null)));
#line 43
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 44
 testRunner.When("I change Payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "CardNumber",
                        "01LV45UNLA4682853483"});
            table2.AddRow(new string[] {
                        "Expires",
                        "09/21"});
            table2.AddRow(new string[] {
                        "CCV",
                        "465"});
#line 45
    testRunner.And("I fill in payment details as follows:", ((string)(null)), table2, "* ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "CardNumber",
                        "01LV45UNLA4682853483"});
            table3.AddRow(new string[] {
                        "Expires",
                        "09/21"});
            table3.AddRow(new string[] {
                        "CCV",
                        "465"});
#line 50
 testRunner.Then("\"Payment\" details are equal to the following:", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AddItemChangeQuantityUpdateBasket(string @case, string quantity, string total, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add item, change quantity, update basket", null, exampleTags);
#line 58
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 59
 testRunner.When(string.Format("I change quantity of socks \"Colourful\" to {0}", quantity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
    testRunner.And("I press button \"Update basket\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line 61
 testRunner.Then(string.Format("total price is {0}", total), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add item, change quantity, update basket, Valid quantity", SourceLine=64)]
        public virtual void AddItemChangeQuantityUpdateBasket_ValidQuantity()
        {
#line 58
this.AddItemChangeQuantityUpdateBasket("Valid quantity", "1000", "18000", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add item, change quantity, update basket, Invalid quantity", SourceLine=64)]
        public virtual void AddItemChangeQuantityUpdateBasket_InvalidQuantity()
        {
#line 58
this.AddItemChangeQuantityUpdateBasket("Invalid quantity", "-1", "0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
